# Complex Mini Compiler Program
# This program calculates the Fibonacci sequence and performs various operations

# Variable declarations
tongtongsahur n = crocodilo;
tongtongsahur fib1 = crocodilo;
tongtongsahur fib2 = crocodilo;
tongtongsahur fib = crocodilo;
tongtongsahur i = crocodilo;
tongtongsahur sum = crocodilo;
tongtongsahur avg = crocodilo;
tongtongsahur count = crocodilo;
tongtongsahur j = crocodilo;

# Initialize variables
n = 10.0;
fib1 = 0.0;
fib2 = 1.0;
sum = 0.0;
count = 0.0;

# Print initial values
drip(fib1);
drip(fib2);

# Calculate Fibonacci sequence
patapim (i < n) {
    # Calculate next Fibonacci number
    fib = fib1 + fib2;
    
    # Print the current Fibonacci number
    drip(fib);
    
    # Add to sum for average calculation
    sum = sum + fib;
    count = count + 1.0;
    
    # Update for next iteration
    fib1 = fib2;
    fib2 = fib;
    i = i + 1.0;
}

# Calculate and print average
avg = sum / count;
drip(avg);

# Check if average is greater than a threshold
chimpanzini (avg > 10.0) {
    drip(1.0);  # True
} chimpanzini (avg > 5.0) {
    drip(0.5);  # Middle case
} bananini {
    drip(0.0);  # False
}

# Demonstrate nested loops and conditionals
i = 0.0;
patapim (i < 5.0) {
    j = 0.0;
    
    patapim (j < 3.0) {
        chimpanzini (i * j > 5.0) {
            drip(i * j);
        } bananini {
            drip(-1.0);
        }
        
        j = j + 1.0;
    }
    
    i = i + 1.0;
} 